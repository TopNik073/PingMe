"""Update Relationships

Revision ID: 36d7c59c9aac
Revises: 50353d6386ee
Create Date: 2025-04-14 00:11:06.907808

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "36d7c59c9aac"
down_revision: Union[str, None] = "50353d6386ee"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("contacts", sa.Column("name", sa.String(), nullable=True))
    op.add_column("contacts", sa.Column("is_blocked", sa.Boolean(), nullable=False))
    op.add_column("contacts", sa.Column("is_favorite", sa.Boolean(), nullable=False))
    op.alter_column("contacts", "contact_id", existing_type=sa.UUID(), nullable=True)
    op.drop_constraint("uq_user_contact", "contacts", type_="unique")
    op.create_unique_constraint(None, "contacts", ["id"])
    op.drop_constraint("contacts_user_id_fkey", "contacts", type_="foreignkey")
    op.drop_constraint("contacts_contact_id_fkey", "contacts", type_="foreignkey")
    op.create_foreign_key(None, "contacts", "users", ["user_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "contacts", "users", ["contact_id"], ["id"], ondelete="SET NULL")
    op.drop_column("contacts", "contact_phone_number")
    op.drop_column("contacts", "contact_name")
    op.create_unique_constraint(None, "conversations", ["id"])
    op.create_unique_constraint(None, "media", ["id"])
    op.add_column("messages", sa.Column("is_edited", sa.Boolean(), nullable=False))
    op.alter_column("messages", "content", existing_type=sa.TEXT(), nullable=False)
    op.create_unique_constraint(None, "messages", ["id"])
    op.drop_constraint("messages_forwarded_from_id_fkey", "messages", type_="foreignkey")
    op.create_foreign_key(
        None, "messages", "users", ["forwarded_from_id"], ["id"], ondelete="SET NULL"
    )
    op.add_column("pings", sa.Column("sender_name", sa.String(), nullable=True))
    op.add_column("pings", sa.Column("recipient_name", sa.String(), nullable=True))
    op.add_column("pings", sa.Column("updated_at", sa.DateTime(), nullable=False))
    op.alter_column("pings", "sender_id", existing_type=sa.UUID(), nullable=True)
    op.alter_column("pings", "recipient_id", existing_type=sa.UUID(), nullable=True)
    op.create_unique_constraint(None, "pings", ["id"])
    op.drop_constraint("pings_recipient_id_fkey", "pings", type_="foreignkey")
    op.drop_constraint("pings_sender_id_fkey", "pings", type_="foreignkey")
    op.create_foreign_key(None, "pings", "users", ["recipient_id"], ["id"], ondelete="SET NULL")
    op.create_foreign_key(None, "pings", "users", ["sender_id"], ["id"], ondelete="SET NULL")
    op.drop_column("pings", "is_delivered")
    op.drop_column("pings", "delivered_at")
    op.create_unique_constraint(None, "stories", ["id"])
    op.alter_column("users", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.create_unique_constraint(None, "users", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="unique")
    op.alter_column("users", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint(None, "stories", type_="unique")
    op.add_column(
        "pings",
        sa.Column("delivered_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "pings", sa.Column("is_delivered", sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "pings", type_="foreignkey")
    op.drop_constraint(None, "pings", type_="foreignkey")
    op.create_foreign_key("pings_sender_id_fkey", "pings", "users", ["sender_id"], ["id"])
    op.create_foreign_key("pings_recipient_id_fkey", "pings", "users", ["recipient_id"], ["id"])
    op.drop_constraint(None, "pings", type_="unique")
    op.alter_column("pings", "recipient_id", existing_type=sa.UUID(), nullable=False)
    op.alter_column("pings", "sender_id", existing_type=sa.UUID(), nullable=False)
    op.drop_column("pings", "updated_at")
    op.drop_column("pings", "recipient_name")
    op.drop_column("pings", "sender_name")
    op.drop_constraint(None, "messages", type_="foreignkey")
    op.create_foreign_key(
        "messages_forwarded_from_id_fkey", "messages", "users", ["forwarded_from_id"], ["id"]
    )
    op.drop_constraint(None, "messages", type_="unique")
    op.alter_column("messages", "content", existing_type=sa.TEXT(), nullable=True)
    op.drop_column("messages", "is_edited")
    op.drop_constraint(None, "media", type_="unique")
    op.drop_constraint(None, "conversations", type_="unique")
    op.add_column(
        "contacts", sa.Column("contact_name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "contacts",
        sa.Column("contact_phone_number", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "contacts", type_="foreignkey")
    op.drop_constraint(None, "contacts", type_="foreignkey")
    op.create_foreign_key("contacts_contact_id_fkey", "contacts", "users", ["contact_id"], ["id"])
    op.create_foreign_key("contacts_user_id_fkey", "contacts", "users", ["user_id"], ["id"])
    op.drop_constraint(None, "contacts", type_="unique")
    op.create_unique_constraint("uq_user_contact", "contacts", ["user_id", "contact_id"])
    op.alter_column("contacts", "contact_id", existing_type=sa.UUID(), nullable=False)
    op.drop_column("contacts", "is_favorite")
    op.drop_column("contacts", "is_blocked")
    op.drop_column("contacts", "name")
    # ### end Alembic commands ###
